class Solution {
    public static int f(int ind, int T, int[] coins,int[][]dp){
        if(ind == 0){
            if(T%coins[0]==0) return T/coins[0];
            else return 1000000000;
        }
        if(dp[ind][T]!=-1) return dp[ind][T];
        int nottake = 0+f(ind-1,T,coins,dp);
        int take = Integer.MAX_VALUE;
        if(coins[ind]<=T) take = 1+f(ind,T-coins[ind],coins,dp);
        return dp[ind][T] = Math.min(nottake,take);
    }
    public int coinChange(int[] coins, int amount) {
        int n = coins.length;
        int[][] dp = new int[n][amount+1];
        for(int []row:dp) Arrays.fill(row,-1);
        int ans = f(n-1,amount,coins,dp);
        if(ans>=1000000000) return -1;
        return ans;
    }
}
